import java.sql.Connection;
import java.sql.PreparedStatement;
import sailpoint.api.SailPointContext;
import sailpoint.object.Identity;
import sailpoint.tools.GeneralException;
import java.util.List;

// Get context and identity
SailPointContext context = request.getContext();
Identity identity = request.getIdentity();
String username = identity.getAttribute("employeeId");  // Ensure correct attribute
List<String> roles = List.of(
    "G_BNY CODE MAINTENANCE",
    "G_BNY PACE VIEW MODEL",
    "G_BNY TECH PROD SUPPORT",
    "G_BNY TECH SCHEDULE CONFIG",
    "SYSTEM ADMIN ROLE"
);
String updateSource = "AH0000000";  // Access Hub Form value

// Database connection details
String jdbcUrl = "jdbc:oracle:thin:@<DB_HOST>:<PORT>:<SID>";
String dbUser = "<DB_USER>";
String dbPassword = "<DB_PASSWORD>";

Connection conn = null;
PreparedStatement stmt = null;

try {
    // Open DB connection
    conn = DriverManager.getConnection(jdbcUrl, dbUser, dbPassword);

    // Loop through roles and insert each one
    String sql = "BEGIN PACE_MASTERDBO.ESTAR_UMGR.ADD_PACE_ROLE_REL(?, ?, ?); COMMIT; END;";
    stmt = conn.prepareStatement(sql);

    for (String role : roles) {
        stmt.setString(1, username);
        stmt.setString(2, role);
        stmt.setString(3, updateSource);
        stmt.executeUpdate();
    }

} catch (Exception e) {
    throw new GeneralException("Error in After Provisioning Rule: " + e.getMessage());
} finally {
    // Close resources
    if (stmt != null) stmt.close();
    if (conn != null) conn.close();
}