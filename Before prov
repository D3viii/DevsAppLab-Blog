import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import sailpoint.api.SailPointContext;
import sailpoint.object.Identity;
import sailpoint.tools.GeneralException;

// Get SailPoint context and identity
SailPointContext context = request.getContext();
Identity identity = request.getIdentity();

// Retrieve Identity Attributes from IIQ Schema
String businessGroup = identity.getAttribute("BUSGROUPS");
String reportProfileGroup = "BUSINESSUSERGROUP";  // Static value from template
String reportViewerGroup = "DEFAULT";
String authenticationMode = "STAR";  
String accountState = "U";  // Enabled
String eventName = "STARSEC_INS_UPD_PACE_USERS";
String partition = "F95";
String ldapUser = "N";
String passwordSetDate = "TO_CHAR(TRUNC(SYSDATE), 'DDMMYYYY')";
String concurrentLogins = "SCLD";
String numLogins = "2";
String commitID = identity.getAttribute("COMITID");
String fullName = identity.getAttribute("FULL_NAME");

// Database connection details
String jdbcUrl = "jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=elsQAHost)(PORT=1521))(CONNECT_DATA=(SERVICE_NAME=elsQA)))";
String dbUser = "dbuser";
String dbPassword = "anchor$1";

Connection conn = null;
PreparedStatement stmt = null;

try {
    // Establish connection to ELS QA database
    conn = DriverManager.getConnection(jdbcUrl, dbUser, dbPassword);
    
    // Insert query for User Business Group Template
    String insertQuery = "INSERT INTO EL_APP_SUPPORT.IAM_ADD_USER " +
                         "(BUSINESS_GROUP, REPORT_PROFILE_GROUP, REPORT_VIEWER_GROUP, " +
                         "AUTHENTICATION_MODE, ACCOUNT_STATE, EVENT_NAME, PARTITION, " +
                         "LDAP_USER, PASSWORD_SET_DATE, ENABLE_CONCURRENT_LOGINS, " +
                         "NUM_LOGINS, COMITID, FULL_NAME) " +
                         "VALUES (?, ?, ?, ?, ?, ?, ?, ?, TRUNC(SYSDATE), ?, ?, ?, ?)";

    stmt = conn.prepareStatement(insertQuery);
    stmt.setString(1, businessGroup);
    stmt.setString(2, reportProfileGroup);
    stmt.setString(3, reportViewerGroup);
    stmt.setString(4, authenticationMode);
    stmt.setString(5, accountState);
    stmt.setString(6, eventName);
    stmt.setString(7, partition);
    stmt.setString(8, ldapUser);
    stmt.setString(9, concurrentLogins);
    stmt.setString(10, numLogins);
    stmt.setString(11, commitID);
    stmt.setString(12, fullName);
    
    stmt.executeUpdate();

} catch (Exception e) {
    throw new GeneralException("Error in Before Provisioning Rule: " + e.getMessage());
} finally {
    // Close database resources
    if (stmt != null) try { stmt.close(); } catch (Exception e) {}
    if (conn != null) try { conn.close(); } catch (Exception e) {}
}